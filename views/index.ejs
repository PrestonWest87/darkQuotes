<!--
  index.ejs
  Main page for Dark Humor Quotes.
  Displays auto‑rotating fallback quotes, unobtrusive Google AdSense ads (if non‑paying),
  and provides Google SSO links, upgrade options, and a toggle for accessibility mode.
  
  License: Proprietary – All rights reserved by Preston West.
  Author: Preston West <prestonwest87@gmail.com>
-->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <!-- SEO Meta Tags -->
  <meta name="description" content="Dark Humor Motivational Quotes offers a steady stream of dark humor inspirational quotes. Sign in with Google and upgrade for an ad-free, custom quote experience powered by Vertex AI." />
  <meta name="keywords" content="dark humor, motivational quotes, inspirational, ad-free, Google SSO, Vertex AI, Cloud SQL, dark quotes" />
  <meta name="author" content="Preston West">
  <meta name="robots" content="index, follow">
  <link rel="canonical" href="http://yourdomain.com/">
  <!-- Open Graph / Facebook -->
  <meta property="og:title" content="Dark Humor Motivational Quotes" />
  <meta property="og:description" content="Enjoy a daily dose of dark humor inspirational quotes with a sleek, modern design. Sign in with Google and upgrade for more features." />
  <meta property="og:image" content="http://yourdomain.com/path/to/og-image.jpg" />
  <meta property="og:url" content="http://yourdomain.com/" />
  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Dark Humor Motivational Quotes" />
  <meta name="twitter:description" content="Dark Humor Motivational Quotes: Your daily dose of dark humor and inspiration. Sign in with Google and upgrade for an ad-free experience." />
  <meta name="twitter:image" content="http://yourdomain.com/path/to/twitter-image.jpg" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dark Humor Motivational Quotes</title>
  <link rel="stylesheet" href="/style.css">
  <!-- Google AdSense script required by Google -->
  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
  <!-- CSRF token for AJAX requests -->
  <meta name="csrf-token" content="<%= csrfToken %>">
</head>
<body>
  <div class="container">
    <header>
      <h1>Dark Humor Motivational Quotes</h1>
      <button id="toggle-accessibility" aria-pressed="false">Toggle Accessibility</button>
      <% if (user) { %>
        <p>Welcome, <%= user.displayName %>! (<a href="/logout">Logout</a>)</p>
        <% if (!user.isPaying) { %>
          <p><a href="/upgrade">Upgrade to Ad-Free &amp; Custom Quote Generation</a></p>
        <% } else { %>
          <p>Thank you for being a paying member! Enjoy your ad-free experience.</p>
          <p>Custom Quote Generations Today: <%= user.dailyCount %> / 30</p>
          <button id="generate-btn">Generate Custom Quote</button>
          <div id="custom-quote"></div>
        <% } %>
      <% } else { %>
        <p><a href="/auth/google">Sign in with Google</a></p>
      <% } %>
      <!-- Unobtrusive header ad container -->
      <div class="ad-container header-ad">
        <%- headerAd %>
      </div>
    </header>
    <main>
      <div id="quote-display" class="quote"></div>
    </main>
    <footer>
      <!-- Unobtrusive footer ad container -->
      <div class="ad-container footer-ad">
        <%- footerAd %>
      </div>
      <p>&copy; 2025 Dark Humor Quotes</p>
    </footer>
  </div>
  <script>
    // Accessibility toggle script:
    const toggleBtn = document.getElementById('toggle-accessibility');
    const isAccessible = localStorage.getItem('accessibility-mode') === 'true';
    if (isAccessible) {
      document.body.classList.add('accessibility-mode');
      toggleBtn.setAttribute('aria-pressed', 'true');
    }
    toggleBtn.addEventListener('click', () => {
      document.body.classList.toggle('accessibility-mode');
      const enabled = document.body.classList.contains('accessibility-mode');
      toggleBtn.setAttribute('aria-pressed', enabled.toString());
      localStorage.setItem('accessibility-mode', enabled);
    });

    // Auto-rotating fallback quotes with fade transitions.
    let quotesQueue = [];
    let currentIndex = 0;
    let offset = 0;
    const limit = 10;
    const display = document.getElementById('quote-display');

    async function fetchQuotes() {
      try {
        const response = await fetch(`/api/quotes?offset=${offset}&limit=${limit}`);
        const data = await response.json();
        if (data.quotes && data.quotes.length > 0) {
          quotesQueue = quotesQueue.concat(data.quotes);
          offset += limit;
        }
      } catch (error) {
        console.error('Error fetching quotes:', error);
      }
    }

    function updateQuote() {
      if (quotesQueue.length === 0) return;
      const newQuote = quotesQueue[currentIndex];
      display.classList.add('fade-out');
      setTimeout(() => {
        display.textContent = newQuote;
        display.classList.remove('fade-out');
        display.classList.add('fade-in');
        setTimeout(() => {
          display.classList.remove('fade-in');
        }, 1000);
        currentIndex = (currentIndex + 1) % quotesQueue.length;
        if (currentIndex >= quotesQueue.length - 2) {
          fetchQuotes();
        }
      }, 1000);
    }

    fetchQuotes().then(() => {
      if (quotesQueue.length > 0) {
        display.textContent = quotesQueue[currentIndex];
        currentIndex++;
      }
      setInterval(updateQuote, 90000);
    });

    // For paid members: Custom quote generation.
    const generateBtn = document.getElementById('generate-btn');
    if (generateBtn) {
      generateBtn.addEventListener('click', async () => {
        generateBtn.disabled = true;
        try {
          const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
          const response = await fetch('/generate-quote', { 
            method: 'POST', 
            headers: { 
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken 
            }
          });
          const data = await response.json();
          const customQuoteElem = document.getElementById('custom-quote');
          if (data.quote) {
            customQuoteElem.textContent = data.quote;
          } else if (data.error) {
            customQuoteElem.textContent = data.error;
          }
        } catch (error) {
          document.getElementById('custom-quote').textContent = 'Error generating quote.';
        }
        generateBtn.disabled = false;
      });
    }
  </script>
</body>
</html>
